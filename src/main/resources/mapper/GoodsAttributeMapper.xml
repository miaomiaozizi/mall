<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zi.mall.mapper.GoodsAttributeMapper">
  <resultMap id="BaseResultMap" type="com.zi.mall.domain.GoodsAttribute">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="attr_id" jdbcType="INTEGER" property="attrId" />
    <result column="attr_value" jdbcType="VARCHAR" property="attrValue" />
    <result column="attr_price" jdbcType="DECIMAL" property="attrPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_id, attr_id, attr_value, attr_price
  </sql>
  <select id="selectByExample" parameterType="com.zi.mall.domain.GoodsAttributeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_goods_attr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_goods_attr
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_goods_attr
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zi.mall.domain.GoodsAttributeExample">
    delete from t_goods_attr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zi.mall.domain.GoodsAttribute">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_goods_attr (goods_id, attr_id, attr_value, 
      attr_price)
    values (#{goodsId,jdbcType=INTEGER}, #{attrId,jdbcType=INTEGER}, #{attrValue,jdbcType=VARCHAR}, 
      #{attrPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.zi.mall.domain.GoodsAttribute">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_goods_attr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="attrId != null">
        attr_id,
      </if>
      <if test="attrValue != null">
        attr_value,
      </if>
      <if test="attrPrice != null">
        attr_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="attrId != null">
        #{attrId,jdbcType=INTEGER},
      </if>
      <if test="attrValue != null">
        #{attrValue,jdbcType=VARCHAR},
      </if>
      <if test="attrPrice != null">
        #{attrPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zi.mall.domain.GoodsAttributeExample" resultType="java.lang.Long">
    select count(*) from t_goods_attr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectGoodsAttrById" resultType="com.zi.mall.domain.GoodsAttribute">
      select attr_id id,attr_name attrName,attr_value attrValue,attr_price attrPrice from t_goods_attr join t_goods_attribute on t_goods_attr.attr_id=t_goods_attribute.id and t_goods_attr.goods_id=#{goodsId}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update t_goods_attr
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.attrId != null">
        attr_id = #{record.attrId,jdbcType=INTEGER},
      </if>
      <if test="record.attrValue != null">
        attr_value = #{record.attrValue,jdbcType=VARCHAR},
      </if>
      <if test="record.attrPrice != null">
        attr_price = #{record.attrPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_goods_attr
    set id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      attr_id = #{record.attrId,jdbcType=INTEGER},
      attr_value = #{record.attrValue,jdbcType=VARCHAR},
      attr_price = #{record.attrPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zi.mall.domain.GoodsAttribute">
    update t_goods_attr
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="attrId != null">
        attr_id = #{attrId,jdbcType=INTEGER},
      </if>
      <if test="attrValue != null">
        attr_value = #{attrValue,jdbcType=VARCHAR},
      </if>
      <if test="attrPrice != null">
        attr_price = #{attrPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zi.mall.domain.GoodsAttribute">
    update t_goods_attr
    set goods_id = #{goodsId,jdbcType=INTEGER},
      attr_id = #{attrId,jdbcType=INTEGER},
      attr_value = #{attrValue,jdbcType=VARCHAR},
      attr_price = #{attrPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>